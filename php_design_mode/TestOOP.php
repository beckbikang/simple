<?php
/**
 *  目标：重用性、灵活性和扩展性
 *  实现手段：
 *     抽象，封装，多态，继承
 *
 *  几个可供参考的原则：
 *      1 单一职责原则
 *      2 开放－封闭原则 （对扩展开放，对修改封闭）
 *      3 依赖倒置原则。（3.1 高层模块不依赖底层模块，两者都依赖抽象.3.2抽象不应该依赖于细节，细节应该依赖于抽象。）
 *      4 替换原则（只有当衍生类能够替换掉基类，软件单位的功能不会受到影响时，基类才真正被复用，而衍生类也才能够在基类的基础上增加新的行为）
 *      5 接口隔离原则。 接口功能单一，避免接口污染。
 *      6 迪米特法则（最少知识原则,一个对象应当对其他对象有尽可能少的了解。）
 *      7 合成/聚合复用原则(要尽量使用合成/聚合，尽量不要使用继承。)
 *
 *
 */

























